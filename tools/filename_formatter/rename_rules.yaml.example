# 文件名规范化工具配置文件示例
# 此文件展示了如何配置 filename_formatter 工具的规则和设置
# 复制此文件为 rename_rules.yaml 并根据需要修改配置

# ========================================
# 基础设置
# ========================================
settings:
  # 处理的视频文件扩展名列表（大小写不敏感）
  # 工具只会处理这些扩展名的文件，其他文件将被忽略
  video_extensions: [".mp4", ".mkv", ".mov", ".avi", ".wmv", ".flv"]
  
  # 最小文件大小阈值（字节）
  # 小于此大小的文件将被跳过，用于过滤缩略图、预览文件等
  # 默认: 104857600 (100MB)
  min_file_size_bytes: 104857600

# ========================================
# 重命名规则
# ========================================
# 规则说明：
# - 每个规则包含 pattern（要替换的字符串）和 replace（替换为的字符串）
# - 规则按照在文件中的顺序依次执行
# - 执行完所有规则后，工具会自动格式化文件名为标准形式（如：ABC-123.mp4）

rename_rules:
  # ========================================
  # 网站前缀清理规则示例
  # ========================================
  # 用于清理下载文件名中的网站标识前缀
  
  - pattern: "example.com@"
    replace: ""
    # 示例：example.com@ABC-123.mp4 -> ABC-123.mp4
  
  - pattern: "site_"
    replace: ""
    # 示例：site_ABC-123.mp4 -> ABC-123.mp4
  
  - pattern: "[website]"
    replace: ""
    # 示例：[website]ABC-123.mp4 -> ABC-123.mp4

  # ========================================
  # 网站后缀清理规则示例
  # ========================================
  # 用于清理文件名中的网站标识后缀
  
  - pattern: "-website.com"
    replace: ""
    # 示例：ABC-123-website.com.mp4 -> ABC-123.mp4
  
  - pattern: "_torrent"
    replace: ""
    # 示例：ABC-123_torrent.mp4 -> ABC-123.mp4

  # ========================================
  # 视频质量标识清理规则示例
  # ========================================
  # 用于清理文件名中的视频质量和格式标识
  
  - pattern: "_FHD"
    replace: ""
    # 示例：ABC-123_FHD.mp4 -> ABC-123.mp4
  
  - pattern: "_HD"
    replace: ""
    # 示例：ABC-123_HD.mp4 -> ABC-123.mp4
  
  - pattern: "_4K"
    replace: ""
    # 示例：ABC-123_4K.mp4 -> ABC-123.mp4
  
  - pattern: "_1080p"
    replace: ""
    # 示例：ABC-123_1080p.mp4 -> ABC-123.mp4
  
  - pattern: "_720p"
    replace: ""
    # 示例：ABC-123_720p.mp4 -> ABC-123.mp4

  # ========================================
  # 编码标识清理规则示例
  # ========================================
  # 用于清理文件名中的视频编码标识
  
  - pattern: "_x264"
    replace: ""
    # 示例：ABC-123_x264.mp4 -> ABC-123.mp4
  
  - pattern: "_x265"
    replace: ""
    # 示例：ABC-123_x265.mp4 -> ABC-123.mp4
  
  - pattern: "_HEVC"
    replace: ""
    # 示例：ABC-123_HEVC.mp4 -> ABC-123.mp4

  # ========================================
  # 特殊字符清理规则示例
  # ========================================
  # 用于清理文件名中的多余字符和分隔符
  
  - pattern: "__"
    replace: "_"
    # 示例：ABC__123.mp4 -> ABC_123.mp4
  
  - pattern: "--"
    replace: "-"
    # 示例：ABC--123.mp4 -> ABC-123.mp4
  
  - pattern: "_-"
    replace: "-"
    # 示例：ABC_-123.mp4 -> ABC-123.mp4

  # ========================================
  # 扩展名修正规则示例（建议放在最后）
  # ========================================
  # 用于修正错误的扩展名格式
  
  - pattern: "ch.mp4"
    replace: ".mp4"
    # 示例：ABC-123ch.mp4 -> ABC-123.mp4
  
  - pattern: "fhd.mp4"
    replace: ".mp4"
    # 示例：ABC-123fhd.mp4 -> ABC-123.mp4

# ========================================
# 使用说明
# ========================================
#
# 1. 配置文件使用：
#    - 将此文件复制为 rename_rules.yaml
#    - 根据实际需要修改规则和设置
#    - 建议先使用 --dry-run 参数预览操作结果
#
# 2. 规则编写建议：
#    - 按类型分组组织规则（前缀、后缀、质量标识等）
#    - 将扩展名修正规则放在最后
#    - 使用具体的 pattern 避免误匹配
#    - 添加注释说明规则用途
#
# 3. 文件名格式化：
#    - 清理规则执行后，工具会自动格式化文件名
#    - 目标格式：ABC-123.mp4（字母大写，连字符分隔数字）
#    - 无法识别格式的文件名将保持原样
#
# 4. 安全保障：
#    - 工具绝不会覆盖已存在的文件
#    - 支持预览模式查看操作结果：--dry-run
#    - 支持冲突处理策略：--conflict-resolution skip|rename
#    - 支持操作日志记录：--log-operations
#
# 5. 环境变量覆盖：
#    - RENAME_RULES_PATH: 指定配置文件路径
#    - MIN_VIDEO_SIZE_BYTES: 覆盖最小文件大小设置
#
# 6. 使用示例：
#    # 预览模式（推荐先使用）
#    python -m tools.filename_formatter /path/to/videos --dry-run
#    
#    # 实际执行重命名
#    python -m tools.filename_formatter /path/to/videos
#    
#    # 冲突时自动重命名
#    python -m tools.filename_formatter /path/to/videos --conflict-resolution rename
#    
#    # 记录操作日志
#    python -m tools.filename_formatter /path/to/videos --log-operations
#
# 7. 常见问题：
#    - 如果文件名没有变化，检查是否已经是标准格式
#    - 如果规则没有生效，检查 pattern 是否精确匹配
#    - 如果文件被跳过，检查文件大小是否满足阈值要求